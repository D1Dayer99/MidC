{"ast":null,"code":"import { CanvasMessages } from \"../../utils/CanvasMessages\";\nimport { PlayingState } from \"../../utils/PlayingState\";\nimport { SET_WORKER, SET_WATERFALL_DELAY } from \"@/store/consts/mutation_types.js\";\nimport { initCanvas, resizeKeys, startDraw, stopDraw, pauseOrResume, stopSong, changeNoteColors } from \"@/store/consts/actions.js\";\nexport default {\n  namespaced: true,\n  state: {\n    worker: {},\n    waterfallDelay: 0\n  },\n  mutations: {\n    [SET_WORKER](state, worker) {\n      state.worker = worker;\n    },\n    [SET_WATERFALL_DELAY](state, delay) {\n      state.waterfallDelay = delay;\n    }\n  },\n  actions: {\n    [initCanvas]({\n      commit,\n      state\n    }, {\n      offscreenCanvas,\n      workerFile\n    }) {\n      commit(SET_WORKER, new Worker(workerFile));\n      state.worker.postMessage({\n        canvas: offscreenCanvas,\n        messageType: CanvasMessages.INIT\n      }, [offscreenCanvas]);\n    },\n    [resizeKeys]({\n      commit,\n      state\n    }, {\n      height,\n      width,\n      array,\n      whiteWidth,\n      blackWidth,\n      waterfallDelay\n    }) {\n      let canvasDataIndexesByNote = {};\n      for (let index = 0; index < array.length; index++) {\n        const key = array[index].getAttribute(\"data-note\");\n        const value = Math.floor(array[index].getBoundingClientRect().x);\n        canvasDataIndexesByNote[key] = value;\n      }\n      commit(SET_WATERFALL_DELAY, waterfallDelay);\n      state.worker.postMessage({\n        messageType: CanvasMessages.RESIZE,\n        resizeData: {\n          height: Math.floor(height),\n          width: Math.floor(width),\n          whiteWidth: Math.floor(whiteWidth),\n          blackWidth: Math.floor(blackWidth),\n          array: canvasDataIndexesByNote\n        }\n      });\n    },\n    [startDraw]({\n      state\n    }, drawNote) {\n      state.worker.postMessage({\n        messageType: CanvasMessages.START_DRAW_NOTE,\n        drawNote\n      });\n    },\n    [stopDraw]({\n      state\n    }, drawNote) {\n      state.worker.postMessage({\n        messageType: CanvasMessages.STOP_DRAW_NOTE,\n        drawNote\n      });\n    },\n    [pauseOrResume]({\n      state\n    }, playing) {\n      state.worker.postMessage({\n        messageType: CanvasMessages.PAUSE_SONG,\n        playing\n      });\n    },\n    [stopSong]({\n      state\n    }) {\n      state.worker.postMessage({\n        messageType: CanvasMessages.STOP_SONG,\n        playing: PlayingState.STOP\n      });\n    },\n    [changeNoteColors]({\n      state\n    }, {\n      blackNoteColor,\n      whiteNoteColor\n    }) {\n      state.worker.postMessage({\n        messageType: CanvasMessages.CHANGE_COLOR,\n        colors: {\n          blackNoteColor,\n          whiteNoteColor\n        }\n      });\n    }\n  }\n};","map":{"version":3,"names":["CanvasMessages","PlayingState","SET_WORKER","SET_WATERFALL_DELAY","initCanvas","resizeKeys","startDraw","stopDraw","pauseOrResume","stopSong","changeNoteColors","namespaced","state","worker","waterfallDelay","mutations","delay","actions","commit","offscreenCanvas","workerFile","Worker","postMessage","canvas","messageType","INIT","height","width","array","whiteWidth","blackWidth","canvasDataIndexesByNote","index","length","key","getAttribute","value","Math","floor","getBoundingClientRect","x","RESIZE","resizeData","drawNote","START_DRAW_NOTE","STOP_DRAW_NOTE","playing","PAUSE_SONG","STOP_SONG","STOP","blackNoteColor","whiteNoteColor","CHANGE_COLOR","colors"],"sources":["/Users/Sunhaoxiang/Desktop/IB_CS/CS_IA/src/store/modules/canvasState.js"],"sourcesContent":["import { CanvasMessages } from \"../../utils/CanvasMessages\"\nimport { PlayingState } from \"../../utils/PlayingState\"\nimport { SET_WORKER, SET_WATERFALL_DELAY } from \"@/store/consts/mutation_types.js\"\nimport { initCanvas, resizeKeys, startDraw, stopDraw, pauseOrResume, stopSong, changeNoteColors } from \"@/store/consts/actions.js\"\n\nexport default {\n    namespaced: true,\n\n    state: {\n      worker: {},\n      waterfallDelay: 0,\n    },\n\n    mutations: {\n        [SET_WORKER](state, worker){\n            state.worker = worker;\n        },\n        [SET_WATERFALL_DELAY](state, delay){\n            state.waterfallDelay = delay;\n        },\n    },\n\n    actions: {\n        [initCanvas]({ commit, state }, { offscreenCanvas, workerFile }){\n            commit(SET_WORKER, new Worker(workerFile));\n            state.worker.postMessage({ canvas: offscreenCanvas, messageType : CanvasMessages.INIT}, [offscreenCanvas]);\n        },\n\n        [resizeKeys]({ commit, state }, { height, width, array, whiteWidth, blackWidth, waterfallDelay }){\n            let canvasDataIndexesByNote = {}\n            for(let index = 0; index < array.length; index++){\n                const key = array[index].getAttribute(\"data-note\");\n                const value = Math.floor(array[index].getBoundingClientRect().x);\n                canvasDataIndexesByNote[key] = value;\n            }\n  \n            commit(SET_WATERFALL_DELAY, waterfallDelay);\n  \n            state.worker.postMessage({ \n                messageType : CanvasMessages.RESIZE, \n                resizeData : {\n                    height: Math.floor(height), \n                    width: Math.floor(width), \n                    whiteWidth : Math.floor(whiteWidth), \n                    blackWidth: Math.floor(blackWidth), \n                    array : canvasDataIndexesByNote \n                }\n            });\n        },\n\n        [startDraw]({state}, drawNote){\n            state.worker.postMessage({ messageType : CanvasMessages.START_DRAW_NOTE, drawNote });\n        },\n\n        [stopDraw]({state}, drawNote){\n            state.worker.postMessage({ messageType : CanvasMessages.STOP_DRAW_NOTE, drawNote });\n        },\n\n        [pauseOrResume]({state}, playing){\n            state.worker.postMessage({ messageType : CanvasMessages.PAUSE_SONG, playing });\n        },\n\n        [stopSong]({state}){\n            state.worker.postMessage({ messageType : CanvasMessages.STOP_SONG, playing : PlayingState.STOP });\n        },\n\n        [changeNoteColors]({state}, { blackNoteColor, whiteNoteColor }){\n            state.worker.postMessage({ messageType : CanvasMessages.CHANGE_COLOR, colors : { blackNoteColor, whiteNoteColor }});\n        }\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}