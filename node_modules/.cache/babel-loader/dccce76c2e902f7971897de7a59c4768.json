{"ast":null,"code":"import { mapState, mapActions } from 'vuex';\nimport { recordingState } from \"@/store/consts/states.js\";\nimport { SET_SAVE_RECORDING } from \"@/store/consts/mutation_types.js\";\nexport default {\n  data: () => {\n    return {\n      songName: \"\"\n    };\n  },\n  methods: {\n    ...mapActions(recordingState, ['saveSong']),\n    handleCancel() {\n      this.$store.commit(recordingState + \"/\" + SET_SAVE_RECORDING, false);\n    },\n    handleSave() {\n      if (this.songName === \"\") handleBlank();\n      this.saveSong(this.songName);\n      this.songName = \"\";\n    },\n    handleBlank() {\n      this.$confirm({\n        message: 'You have set the name of the new recording as blank, are you sure?',\n        button: {\n          no: 'No',\n          yes: 'Yes'\n        },\n        callback: confirm => {\n          handleSave();\n        }\n      });\n    }\n  },\n  computed: {\n    ...mapState([recordingState])\n  }\n};","map":{"version":3,"mappings":"AA4BA;AACA;AACA;AAEA;EACAA;IACA;MACAC;IACA;EACA;EACAC;IACA;IACAC;MACA;IACA;IACAC;MACA,0BACAC;MACA;MACA;IACA;IACAA;MACA,cACA;QACAC;QACAC;UACAC;UACAC;QACA;QACAC;UACAN;QACA;MACA,EACA;IACA;EACA;EACAO;IACA;EACA;AACA","names":["data","songName","methods","handleCancel","handleSave","handleBlank","message","button","no","yes","callback","computed"],"sourceRoot":"src/components/screens","sources":["savesong.vue"],"sourcesContent":["<template>\n    <v-dialog persistent v-model=\"recordingState.saveRecordingDialog\" max-width=\"400px\">\n      <v-card>\n        <v-card-title>Save recording</v-card-title>\n\n        <v-card-text>\n          <audio controls style=\"width: 100%; min-width: 200px;\"> </audio> \n\n          <v-text-field label=\"Song name\" v-model=\"songName\"></v-text-field>\n        </v-card-text>\n\n        <v-card-actions>\n          <v-spacer/>\n\n          <v-btn style=\"margin: 5px\" dark @click=\"handleCancel()\">\n            Cancel\n          </v-btn>\n\n          <v-btn style=\"margin: 5px\" dark @click=\"handleSave()\">\n            Save\n          </v-btn>\n        </v-card-actions>\n\n      </v-card>\n    </v-dialog>\n</template>\n\n<script>\nimport { mapState, mapActions } from 'vuex';\nimport { recordingState } from \"@/store/consts/states.js\";\nimport { SET_SAVE_RECORDING } from \"@/store/consts/mutation_types.js\";\n\nexport default {\n  data: () => {\n    return {\n      songName : \"\",\n    };\n    },\n  methods: {\n    ...mapActions(recordingState, ['saveSong']),\n    handleCancel(){\n      this.$store.commit(recordingState + \"/\" + SET_SAVE_RECORDING, false);\n    },\n    handleSave(){\n        if (this.songName === \"\")\n            handleBlank();\n      this.saveSong(this.songName);\n      this.songName = \"\";\n    },\n    handleBlank() {\n        this.$confirm(\n            {\n                message: 'You have set the name of the new recording as blank, are you sure?',\n                button: {\n                    no: 'No',\n                    yes: 'Yes'\n                },\n                callback: confirm => {\n                    handleSave();\n                }\n            }\n        )\n    }\n  },\n  computed: {\n    ...mapState([recordingState])\n  }\n}\n</script>\n"]},"metadata":{},"sourceType":"module"}