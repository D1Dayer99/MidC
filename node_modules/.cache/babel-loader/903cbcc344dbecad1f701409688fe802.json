{"ast":null,"code":"import Axios from 'axios';\nimport { login, logout, register } from \"@/store/consts/actions.js\";\nimport { AUTH_REQUEST, AUTH_SUCCESS, AUTH_ERROR, LOGOUT } from \"@/store/consts/mutation_types.js\";\nexport default {\n  namespaced: true,\n  state: {\n    status: '',\n    token: localStorage.getItem('token') || '',\n    user: {}\n  },\n  mutations: {\n    [AUTH_REQUEST](state) {\n      state.status = 'loading';\n    },\n    [AUTH_SUCCESS](state, token, user) {\n      state.status = 'success';\n      state.token = token;\n      state.user = user;\n    },\n    [AUTH_ERROR](state) {\n      state.status = 'error';\n    },\n    [LOGOUT](state) {\n      state.status = '';\n      state.token = '';\n    }\n  },\n  actions: {\n    [login]({\n      commit\n    }, user) {\n      return new Promise((resolve, reject) => {\n        commit(AUTH_REQUEST);\n        Axios({\n          url: 'http://localhost:3000/login',\n          data: user,\n          method: 'POST'\n        }).then(resp => {\n          const token = resp.data.token;\n          const user = resp.data.user;\n          localStorage.setItem('token', token);\n          Axios.defaults.headers.common['Authorization'] = token;\n          commit(AUTH_SUCCESS, token, user);\n          resolve(resp);\n        }).catch(err => {\n          commit(AUTH_ERROR);\n          localStorage.removeItem('token');\n          reject(err);\n        });\n      });\n    },\n    [register]({\n      commit\n    }, user) {\n      return new Promise((resolve, reject) => {\n        commit(AUTH_REQUEST);\n        Axios({\n          url: 'http://localhost:3000/register',\n          data: user,\n          method: 'POST'\n        }).then(resp => {\n          const token = resp.data.token;\n          const user = resp.data.user;\n          localStorage.setItem('token', token);\n          Axios.defaults.headers.common['Authorization'] = token;\n          commit(AUTH_SUCCESS, token, user);\n          resolve(resp);\n        }).catch(err => {\n          commit(AUTH_ERROR, err);\n          localStorage.removeItem('token');\n          reject(err);\n        });\n      });\n    },\n    [logout]({\n      commit\n    }) {\n      return new Promise((resolve, reject) => {\n        commit(LOGOUT);\n        localStorage.removeItem('token');\n        delete Axios.defaults.headers.common['Authorization'];\n        resolve();\n      });\n    }\n  },\n  getters: {\n    isLoggedIn: state => !!state.token,\n    authStatus: state => state.status\n  }\n};","map":{"version":3,"names":["Axios","login","logout","register","AUTH_REQUEST","AUTH_SUCCESS","AUTH_ERROR","LOGOUT","namespaced","state","status","token","localStorage","getItem","user","mutations","actions","commit","Promise","resolve","reject","url","data","method","then","resp","setItem","defaults","headers","common","catch","err","removeItem","getters","isLoggedIn","authStatus"],"sources":["/Users/Sunhaoxiang/Desktop/IB_CS/CS_IA/src/store/modules/authState.js"],"sourcesContent":["import Axios from 'axios'\nimport { login, logout, register } from \"@/store/consts/actions.js\"\nimport { AUTH_REQUEST, AUTH_SUCCESS,AUTH_ERROR,LOGOUT } from \"@/store/consts/mutation_types.js\"\n\nexport default ({\n    namespaced: true,\n    state: {\n        status: '',\n        token: localStorage.getItem('token') || '',\n        user: {}\n    },\n\n    mutations: {\n        [AUTH_REQUEST](state) {\n            state.status = 'loading'\n          },\n        [AUTH_SUCCESS](state, token, user) {\n            state.status = 'success'\n            state.token = token\n            state.user = user\n          },\n        [AUTH_ERROR](state) {\n            state.status = 'error'\n          },\n        [LOGOUT](state) {\n            state.status = ''\n            state.token = ''\n          },\n    },\n\n    actions: {\n        [login]({ commit }, user) {\n          return new Promise((resolve, reject) => {\n            commit(AUTH_REQUEST)\n            Axios({ url: 'http://localhost:3000/login', data: user, method: 'POST' })\n              .then(resp => {\n                const token = resp.data.token\n                const user = resp.data.user\n                localStorage.setItem('token', token)\n                Axios.defaults.headers.common['Authorization'] = token\n                commit(AUTH_SUCCESS, token, user)\n                resolve(resp)\n              })\n              .catch(err => {\n                commit(AUTH_ERROR)\n                localStorage.removeItem('token')\n                reject(err)\n              })\n          })\n        },\n        [register]({ commit }, user) {\n          return new Promise((resolve, reject) => {\n            commit(AUTH_REQUEST)\n            Axios({ url: 'http://localhost:3000/register', data: user, method: 'POST' })\n              .then(resp => {\n                const token = resp.data.token\n                const user = resp.data.user\n                localStorage.setItem('token', token)\n                Axios.defaults.headers.common['Authorization'] = token\n                commit(AUTH_SUCCESS, token, user)\n                resolve(resp)\n              })\n              .catch(err => {\n                commit(AUTH_ERROR, err)\n                localStorage.removeItem('token')\n                reject(err)\n              })\n          })\n        },\n        [logout]({ commit }) {\n          return new Promise((resolve, reject) => {\n            commit(LOGOUT)\n            localStorage.removeItem('token')\n            delete Axios.defaults.headers.common['Authorization']\n            resolve()\n          })\n        }\n      },\n    getters: {\n        isLoggedIn: state => !!state.token,\n        authStatus: state => state.status,\n    }\n    })\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}