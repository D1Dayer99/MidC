{"ast":null,"code":"import { PlayingState } from \"../../utils/PlayingState\";\nimport { playlistState, canvasState, keyboardState } from \"@/store/consts/states.js\";\nimport { SET_SHOW_CONFIG, SET_OCTAVES, SET_EDIT_KEYS, SET_SHOW_KEYS, SET_SHOW_NOTES, SET_IS_MOUSE_PRESSED, SET_PLAYING, SET_WHITE_NOTE_COLOR, SET_BLACK_NOTE_COLOR, SET_VOLUME, SET_SPEED } from \"@/store/consts/mutation_types.js\";\nimport { changeOctaves, changeVolume, changeSpeed, setPlaying, stopPlaying, whiteNoteColorChanged, blackNoteColorChanged, generateNotes, generateNotesIndexesByKey, pauseTimers, resumeTimers, pauseOrResumeSong, stopSong, changeNoteColors } from \"@/store/consts/actions.js\";\nexport default {\n  namespaced: true,\n  state: {\n    showConfig: false,\n    octaves: [2, 6],\n    maxEndOctave: 8,\n    editKeys: false,\n    showKeys: false,\n    showNotes: false,\n    uploadMidi: false,\n    playing: PlayingState.STOP,\n    whiteNoteColor: \"#1eb7eb\",\n    blackNoteColor: \"#f9bb2d\",\n    volume: 100,\n    speed: 100,\n    defaultSpeed: 100\n  },\n  mutations: {\n    [SET_SHOW_CONFIG](state, showConfig) {\n      state.showConfig = showConfig;\n    },\n    [SET_OCTAVES](state, octaves) {\n      state.octaves = octaves[0] > octaves[1] ? octaves.reverse() : octaves;\n    },\n    [SET_EDIT_KEYS](state, editKeys) {\n      state.editKeys = editKeys;\n    },\n    [SET_SHOW_KEYS](state, showKeys) {\n      state.showKeys = showKeys;\n    },\n    [SET_SHOW_NOTES](state, showNotes) {\n      state.showNotes = showNotes;\n    },\n    [SET_IS_MOUSE_PRESSED](state, isMousePressed) {\n      state.isMousePressed = isMousePressed;\n    },\n    [SET_PLAYING](state, playing) {\n      state.playing = playing;\n    },\n    [SET_WHITE_NOTE_COLOR](state, color) {\n      state.whiteNoteColor = color;\n    },\n    [SET_BLACK_NOTE_COLOR](state, color) {\n      state.blackNoteColor = color;\n    },\n    [SET_VOLUME](state, volume) {\n      state.volume = volume;\n    },\n    [SET_SPEED](state, speed) {\n      state.speed = speed;\n    }\n  },\n  actions: {\n    [changeOctaves]({\n      commit,\n      dispatch\n    }, octaves) {\n      commit(SET_OCTAVES, octaves);\n      dispatch(keyboardState + \"/\" + generateNotes, {}, {\n        root: true\n      });\n      dispatch(keyboardState + \"/\" + generateNotesIndexesByKey, {}, {\n        root: true\n      });\n    },\n    [changeVolume]({\n      commit,\n      rootState\n    }, volume) {\n      commit(SET_VOLUME, volume);\n      if (volume === 0) {\n        rootState.toneState.sampler.volume.value = -1000;\n      } else {\n        rootState.toneState.sampler.volume.value = volume * 0.3 - 30;\n      }\n    },\n    [changeSpeed]({\n      commit,\n      rootState\n    }, speed) {\n      commit(SET_SPEED, speed);\n      rootState.toneState.tone.Transport.bpm.value = speed * 1.2;\n    },\n    [setPlaying]({\n      commit,\n      dispatch\n    }, playing) {\n      if (playing === PlayingState.PAUSE) {\n        dispatch(playlistState + \"/\" + pauseTimers, {}, {\n          root: true\n        });\n      } else {\n        dispatch(playlistState + \"/\" + resumeTimers, {}, {\n          root: true\n        });\n      }\n      dispatch(canvasState + \"/\" + pauseOrResumeSong, playing, {\n        root: true\n      });\n      commit(SET_PLAYING, playing);\n    },\n    [stopPlaying]({\n      commit,\n      dispatch,\n      state,\n      rootState\n    }) {\n      dispatch(canvasState + \"/\" + stopSong, {}, {\n        root: true\n      });\n      commit(SET_PLAYING, PlayingState.STOP);\n      commit(SET_SPEED, state.defaultSpeed);\n      rootState.toneState.tone.Transport.bpm.value = state.defaultSpeed * 1.2;\n    },\n    [whiteNoteColorChanged]({\n      state,\n      commit,\n      dispatch\n    }, color) {\n      commit(SET_WHITE_NOTE_COLOR, color);\n      dispatch(canvasState + \"/\" + changeNoteColors, {\n        whiteNoteColor: state.whiteNoteColor,\n        blackNoteColor: state.blackNoteColor\n      }, {\n        root: true\n      });\n    },\n    [blackNoteColorChanged]({\n      state,\n      commit,\n      dispatch\n    }, color) {\n      commit(SET_BLACK_NOTE_COLOR, color);\n      dispatch(canvasState + \"/\" + changeNoteColors, {\n        whiteNoteColor: state.whiteNoteColor,\n        blackNoteColor: state.blackNoteColor\n      }, {\n        root: true\n      });\n    }\n  }\n};","map":{"version":3,"names":["PlayingState","playlistState","canvasState","keyboardState","SET_SHOW_CONFIG","SET_OCTAVES","SET_EDIT_KEYS","SET_SHOW_KEYS","SET_SHOW_NOTES","SET_IS_MOUSE_PRESSED","SET_PLAYING","SET_WHITE_NOTE_COLOR","SET_BLACK_NOTE_COLOR","SET_VOLUME","SET_SPEED","changeOctaves","changeVolume","changeSpeed","setPlaying","stopPlaying","whiteNoteColorChanged","blackNoteColorChanged","generateNotes","generateNotesIndexesByKey","pauseTimers","resumeTimers","pauseOrResumeSong","stopSong","changeNoteColors","namespaced","state","showConfig","octaves","maxEndOctave","editKeys","showKeys","showNotes","uploadMidi","playing","STOP","whiteNoteColor","blackNoteColor","volume","speed","defaultSpeed","mutations","reverse","isMousePressed","color","actions","commit","dispatch","root","rootState","toneState","sampler","value","tone","Transport","bpm","PAUSE"],"sources":["/Users/Sunhaoxiang/Desktop/IB_CS/CS_IA/src/store/modules/menuState.js"],"sourcesContent":["import { PlayingState } from \"../../utils/PlayingState\";\nimport { playlistState, canvasState, keyboardState } from \"@/store/consts/states.js\";\nimport { SET_SHOW_CONFIG, \n    SET_OCTAVES,\n    SET_EDIT_KEYS,\n    SET_SHOW_KEYS,\n    SET_SHOW_NOTES,\n    SET_IS_MOUSE_PRESSED,\n    SET_PLAYING,\n    SET_WHITE_NOTE_COLOR,\n    SET_BLACK_NOTE_COLOR,\n    SET_VOLUME,\n    SET_SPEED\n} from \"@/store/consts/mutation_types.js\";\nimport { changeOctaves, \n    changeVolume,\n    changeSpeed,\n    setPlaying,\n    stopPlaying,\n    whiteNoteColorChanged,\n    blackNoteColorChanged,\n    generateNotes,\n    generateNotesIndexesByKey,\n    pauseTimers,\n    resumeTimers,\n    pauseOrResumeSong,\n    stopSong,\n    changeNoteColors\n} from \"@/store/consts/actions.js\";\n\nexport default {\n    namespaced: true,\n\n    state: {\n        showConfig : false,\n        octaves: [2, 6],\n        maxEndOctave: 8,\n        editKeys : false,\n        showKeys : false,\n        showNotes: false,\n        uploadMidi: false,\n        playing: PlayingState.STOP,\n        whiteNoteColor: \"#1eb7eb\",\n        blackNoteColor: \"#f9bb2d\",\n        volume: 100,\n        speed: 100,\n        defaultSpeed: 100\n    },\n\n    mutations: {\n        [SET_SHOW_CONFIG](state, showConfig){\n            state.showConfig = showConfig;\n        },\n        [SET_OCTAVES](state, octaves){\n            state.octaves = octaves[0] > octaves[1] ? octaves.reverse() : octaves;\n        },\n        [SET_EDIT_KEYS](state, editKeys){\n            state.editKeys = editKeys;\n        },\n        [SET_SHOW_KEYS](state, showKeys){\n            state.showKeys = showKeys;\n        },\n        [SET_SHOW_NOTES](state, showNotes){\n            state.showNotes = showNotes;\n        },\n        [SET_IS_MOUSE_PRESSED](state, isMousePressed){\n            state.isMousePressed = isMousePressed;\n        },\n        [SET_PLAYING](state, playing){\n            state.playing = playing;\n        },\n        [SET_WHITE_NOTE_COLOR](state, color){\n            state.whiteNoteColor = color;\n        },\n        [SET_BLACK_NOTE_COLOR](state, color){\n            state.blackNoteColor = color;\n        },\n        [SET_VOLUME](state, volume){\n            state.volume = volume;\n        },\n        [SET_SPEED](state, speed){\n            state.speed = speed;\n        }\n    },\n\n    actions: {\n        [changeOctaves]({ commit, dispatch }, octaves){\n            commit(SET_OCTAVES, octaves);\n            dispatch(keyboardState + \"/\" + generateNotes, {}, {root:true});\n            dispatch(keyboardState + \"/\" + generateNotesIndexesByKey, {}, {root:true});\n        }, \n\n        [changeVolume]({ commit, rootState }, volume) {\n            commit(SET_VOLUME, volume);\n            if (volume === 0) {\n                rootState.toneState.sampler.volume.value = -1000;\n            }\n            else {\n                rootState.toneState.sampler.volume.value = volume * 0.3 - 30;\n            }\n        },\n\n        [changeSpeed]({ commit, rootState }, speed) {\n            commit(SET_SPEED, speed);\n            rootState.toneState.tone.Transport.bpm.value = speed * 1.2;\n        },\n\n        [setPlaying]({ commit, dispatch }, playing){\n            if(playing === PlayingState.PAUSE){\n                dispatch(playlistState + \"/\" + pauseTimers, {}, {root:true});\n            } else {\n                dispatch(playlistState + \"/\" + resumeTimers, {}, {root:true});\n            }\n\n            dispatch(canvasState + \"/\" + pauseOrResumeSong, playing, {root:true});\n            commit(SET_PLAYING, playing);\n        },\n\n        [stopPlaying]({ commit, dispatch, state, rootState }){\n            dispatch(canvasState + \"/\" + stopSong, {}, {root:true});\n            commit(SET_PLAYING, PlayingState.STOP);\n\n            commit(SET_SPEED, state.defaultSpeed);\n            rootState.toneState.tone.Transport.bpm.value = state.defaultSpeed * 1.2;\n        },\n\n        [whiteNoteColorChanged]({ state, commit, dispatch }, color){\n            commit(SET_WHITE_NOTE_COLOR, color);\n            dispatch(canvasState + \"/\" + changeNoteColors, { whiteNoteColor: state.whiteNoteColor, blackNoteColor : state.blackNoteColor }, {root:true});\n        },\n\n        [blackNoteColorChanged]({ state, commit, dispatch }, color){\n            commit(SET_BLACK_NOTE_COLOR, color);\n            dispatch(canvasState + \"/\" + changeNoteColors, { whiteNoteColor: state.whiteNoteColor, blackNoteColor : state.blackNoteColor }, {root:true});\n        },\n    },\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}