{"ast":null,"code":"import { PlayingState } from \"../../utils/PlayingState\";\nimport { playlistState, canvasState, keyboardState } from \"@/store/consts/states.js\";\nimport { SET_SHOW_CONFIG, SET_OCTAVES, SET_SHOW_NOTES, SET_IS_MOUSE_PRESSED, SET_PLAYING, SET_WHITE_NOTE_COLOR, SET_BLACK_NOTE_COLOR, SET_SUSTAIN, SET_VOLUME, SET_SPEED } from \"@/store/consts/mutations.js\";\nimport { changeOctaves, changeVolume, changeSpeed, setPlaying, stopPlaying, whiteNoteColorChanged, blackNoteColorChanged, generateNotes, generateNotesIndexesByKey, pauseTimers, resumeTimers, pauseOrResumeSong, stopSong, changeNoteColors } from \"@/store/consts/actions.js\";\nexport default {\n  namespaced: true,\n  state: {\n    showConfig: false,\n    octaves: [2, 6],\n    maxEndOctave: 8,\n    showNotes: false,\n    playing: PlayingState.STOP,\n    whiteNoteColor: \"#BFDBF7\",\n    blackNoteColor: \"#1F7A8C\",\n    sustain: false,\n    volume: 100,\n    speed: 100,\n    defaultSpeed: 100\n  },\n  mutations: {\n    [SET_SHOW_CONFIG](state, showConfig) {\n      state.showConfig = showConfig;\n    },\n    [SET_OCTAVES](state, octaves) {\n      state.octaves = octaves[0] > octaves[1] ? octaves.reverse() : octaves;\n    },\n    [SET_SHOW_NOTES](state, showNotes) {\n      state.showNotes = showNotes;\n    },\n    [SET_IS_MOUSE_PRESSED](state, isMousePressed) {\n      state.isMousePressed = isMousePressed;\n    },\n    [SET_PLAYING](state, playing) {\n      state.playing = playing;\n    },\n    [SET_WHITE_NOTE_COLOR](state, color) {\n      state.whiteNoteColor = color;\n    },\n    [SET_BLACK_NOTE_COLOR](state, color) {\n      state.blackNoteColor = color;\n    },\n    [SET_SUSTAIN](state, sustain) {\n      state.sustain = sustain;\n    },\n    [SET_VOLUME](state, volume) {\n      state.volume = volume;\n    },\n    [SET_SPEED](state, speed) {\n      state.speed = speed;\n    }\n  },\n  actions: {\n    [changeOctaves]({\n      commit,\n      dispatch\n    }, octaves) {\n      commit(SET_OCTAVES, octaves);\n      dispatch(keyboardState + \"/\" + generateNotes, {}, {\n        root: true\n      });\n      dispatch(keyboardState + \"/\" + generateNotesIndexesByKey, {}, {\n        root: true\n      });\n    },\n    [changeVolume]({\n      commit,\n      rootState\n    }, volume) {\n      commit(SET_VOLUME, volume);\n      if (volume === 0) {\n        rootState.toneState.sampler.volume.value = -1000;\n      } else {\n        rootState.toneState.sampler.volume.value = volume * 0.5;\n      }\n    },\n    [changeSpeed]({\n      commit,\n      rootState\n    }, speed) {\n      commit(SET_SPEED, speed);\n      rootState.toneState.tone.Transport.bpm.value = speed * 1.2;\n    },\n    [setPlaying]({\n      commit,\n      dispatch\n    }, playing) {\n      if (playing === PlayingState.PAUSE) {\n        dispatch(playlistState + \"/\" + pauseTimers, {}, {\n          root: true\n        });\n      } else {\n        dispatch(playlistState + \"/\" + resumeTimers, {}, {\n          root: true\n        });\n      }\n      dispatch(canvasState + \"/\" + pauseOrResumeSong, playing, {\n        root: true\n      });\n      commit(SET_PLAYING, playing);\n    },\n    [stopPlaying]({\n      commit,\n      dispatch,\n      state,\n      rootState\n    }) {\n      dispatch(canvasState + \"/\" + stopSong, {}, {\n        root: true\n      });\n      commit(SET_PLAYING, PlayingState.STOP);\n      commit(SET_SPEED, state.defaultSpeed);\n      rootState.toneState.tone.Transport.bpm.value = state.defaultSpeed * 1.2;\n    },\n    [whiteNoteColorChanged]({\n      state,\n      commit,\n      dispatch\n    }, color) {\n      commit(SET_WHITE_NOTE_COLOR, color);\n      dispatch(canvasState + \"/\" + changeNoteColors, {\n        whiteNoteColor: state.whiteNoteColor,\n        blackNoteColor: state.blackNoteColor\n      }, {\n        root: true\n      });\n    },\n    [blackNoteColorChanged]({\n      state,\n      commit,\n      dispatch\n    }, color) {\n      commit(SET_BLACK_NOTE_COLOR, color);\n      dispatch(canvasState + \"/\" + changeNoteColors, {\n        whiteNoteColor: state.whiteNoteColor,\n        blackNoteColor: state.blackNoteColor\n      }, {\n        root: true\n      });\n    }\n  }\n};","map":{"version":3,"names":["PlayingState","playlistState","canvasState","keyboardState","SET_SHOW_CONFIG","SET_OCTAVES","SET_SHOW_NOTES","SET_IS_MOUSE_PRESSED","SET_PLAYING","SET_WHITE_NOTE_COLOR","SET_BLACK_NOTE_COLOR","SET_SUSTAIN","SET_VOLUME","SET_SPEED","changeOctaves","changeVolume","changeSpeed","setPlaying","stopPlaying","whiteNoteColorChanged","blackNoteColorChanged","generateNotes","generateNotesIndexesByKey","pauseTimers","resumeTimers","pauseOrResumeSong","stopSong","changeNoteColors","namespaced","state","showConfig","octaves","maxEndOctave","showNotes","playing","STOP","whiteNoteColor","blackNoteColor","sustain","volume","speed","defaultSpeed","mutations","reverse","isMousePressed","color","actions","commit","dispatch","root","rootState","toneState","sampler","value","tone","Transport","bpm","PAUSE"],"sources":["/Users/Sunhaoxiang/Desktop/IB_CS/CS_IA/src/store/modules/menuState.js"],"sourcesContent":["import { PlayingState } from \"../../utils/PlayingState\";\nimport { playlistState, canvasState, keyboardState } from \"@/store/consts/states.js\";\nimport { SET_SHOW_CONFIG, \n    SET_OCTAVES,\n    SET_SHOW_NOTES,\n    SET_IS_MOUSE_PRESSED,\n    SET_PLAYING,\n    SET_WHITE_NOTE_COLOR,\n    SET_BLACK_NOTE_COLOR,\n    SET_SUSTAIN,\n    SET_VOLUME,\n    SET_SPEED\n  } from \"@/store/consts/mutations.js\";\nimport { changeOctaves, \n    changeVolume,\n    changeSpeed,\n    setPlaying,\n    stopPlaying,\n    whiteNoteColorChanged,\n    blackNoteColorChanged,\n    generateNotes,\n    generateNotesIndexesByKey,\n    pauseTimers,\n    resumeTimers,\n    pauseOrResumeSong,\n    stopSong,\n    changeNoteColors\n  } from \"@/store/consts/actions.js\";\n\nexport default {\n    namespaced: true,\n\n    state: {\n        showConfig : false,\n        octaves: [2, 6],\n        maxEndOctave: 8,\n        showNotes: false,\n        playing: PlayingState.STOP,\n        whiteNoteColor: \"#BFDBF7\",\n        blackNoteColor: \"#1F7A8C\",\n        sustain: false,\n        volume: 100,\n        speed: 100,\n        defaultSpeed: 100\n    },\n\n    mutations: {\n        [SET_SHOW_CONFIG](state, showConfig){\n            state.showConfig = showConfig;\n        },\n        [SET_OCTAVES](state, octaves){\n            state.octaves = octaves[0] > octaves[1] ? octaves.reverse() : octaves;\n        },\n        [SET_SHOW_NOTES](state, showNotes){\n            state.showNotes = showNotes;\n        },\n        [SET_IS_MOUSE_PRESSED](state, isMousePressed){\n            state.isMousePressed = isMousePressed;\n        },\n        [SET_PLAYING](state, playing){\n            state.playing = playing;\n        },\n        [SET_WHITE_NOTE_COLOR](state, color){\n            state.whiteNoteColor = color;\n        },\n        [SET_BLACK_NOTE_COLOR](state, color){\n            state.blackNoteColor = color;\n        },\n        [SET_SUSTAIN](state, sustain){\n            state.sustain = sustain;\n        },\n        [SET_VOLUME](state, volume){\n            state.volume = volume;\n        },\n        [SET_SPEED](state, speed){\n            state.speed = speed;\n        }\n    },\n\n    actions: {\n        [changeOctaves]({ commit, dispatch }, octaves){\n            commit(SET_OCTAVES, octaves);\n            dispatch(keyboardState + \"/\" + generateNotes, {}, {root:true});\n            dispatch(keyboardState + \"/\" + generateNotesIndexesByKey, {}, {root:true});\n        }, \n\n        [changeVolume]({ commit, rootState }, volume) {\n            commit(SET_VOLUME, volume);\n            if (volume === 0) {\n                rootState.toneState.sampler.volume.value = -1000;\n            }\n            else {\n                rootState.toneState.sampler.volume.value = volume * 0.5;\n            }\n        },\n\n        [changeSpeed]({ commit, rootState }, speed) {\n            commit(SET_SPEED, speed);\n            rootState.toneState.tone.Transport.bpm.value = speed * 1.2;\n        },\n\n        [setPlaying]({ commit, dispatch }, playing){\n            if(playing === PlayingState.PAUSE){\n                dispatch(playlistState + \"/\" + pauseTimers, {}, {root:true});\n            } else {\n                dispatch(playlistState + \"/\" + resumeTimers, {}, {root:true});\n            }\n\n            dispatch(canvasState + \"/\" + pauseOrResumeSong, playing, {root:true});\n            commit(SET_PLAYING, playing);\n        },\n\n        [stopPlaying]({ commit, dispatch, state, rootState }){\n            dispatch(canvasState + \"/\" + stopSong, {}, {root:true});\n            commit(SET_PLAYING, PlayingState.STOP);\n\n            commit(SET_SPEED, state.defaultSpeed);\n            rootState.toneState.tone.Transport.bpm.value = state.defaultSpeed * 1.2;\n        },\n\n        [whiteNoteColorChanged]({ state, commit, dispatch }, color){\n            commit(SET_WHITE_NOTE_COLOR, color);\n            dispatch(canvasState + \"/\" + changeNoteColors, { whiteNoteColor: state.whiteNoteColor, blackNoteColor : state.blackNoteColor }, {root:true});\n        },\n\n        [blackNoteColorChanged]({ state, commit, dispatch }, color){\n            commit(SET_BLACK_NOTE_COLOR, color);\n            dispatch(canvasState + \"/\" + changeNoteColors, { whiteNoteColor: state.whiteNoteColor, blackNoteColor : state.blackNoteColor }, {root:true});\n        },\n    },\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}