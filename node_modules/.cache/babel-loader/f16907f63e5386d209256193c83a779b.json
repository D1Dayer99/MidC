{"ast":null,"code":"/* Importing necessary files and functions*/\nimport menu from \"./components/piano/menu\"; /* Used for the features used by the user, such as toggling play/stop, toggling note annotations etc*/\nimport keyboard from \"./components/piano/keyboard\"; /* Drawing the keyboard */\nimport savesong from \"./components/screens/savesong\";\nimport loading from \"./components/screens/loading\";\nimport { mapState, mapActions } from 'vuex'; /* State management */\nimport { canvasState } from \"@/store/consts/states.js\";\nimport { resizeCanvas } from \"@/store/consts/actions.js\";\nexport default {\n  component: {\n    menu,\n    keyboard,\n    savesong,\n    loading\n  },\n  created() {\n    window.addEventListener(\"resize\", this.resize);\n    this.$root.$on(\"resize_canvas_notes\", this.resize);\n  },\n  destroyed() {\n    window.removeEventListener(\"resize\", {});\n  },\n  methods: {\n    ...mapActions(canvasState, [resizeCanvas]),\n    resize() {\n      const keyboardDimensions = document.getElementById(\"piano-container\").getBoundingClientRect();\n      const menuDimensions = document.getElementById(\"piano-menu\").getBoundingClientRect();\n      const height = window.innerHeight - keyboardDimensions.height - menuDimensions.height;\n      const width = keyboardDimensions.width;\n      const white_notes = document.getElementByClassName(\"white-notes\");\n      const black_notes = document.getElementByClassName(\"black-notes\");\n      const white_width = white_notes[0].getBoundingClientRect().width;\n      const black_width = black_notes[0].getBoundingClientRect().width;\n      const key_array = Array.from(white_notes).concat(Array.from(black_notes));\n      const falling_blocks_delay = height * 10;\n      this.resizeCanvas({\n        height,\n        width,\n        key_array,\n        white_width,\n        black_width,\n        falling_blocks_delay\n      });\n    }\n  }\n};","map":{"version":3,"mappings":"AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;EACAA;IAAAC;IAAAC;IAAAC;IAAAC;EAAA;EAEAC;IACAC;IACA;EACA;EAEAC;IACAD;EACA;EAEAE;IACA;IAEAC;MACA;MACA;MAEA;MACA;MAEA;MACA;MAEA;MACA;MAEA;MACA;MAEA;QAAAC;QAAAC;QAAAC;QAAAC;QAAAC;QAAAC;MAAA;IACA;EACA;AACA","names":["component","menu","keyboard","savesong","loading","created","window","destroyed","methods","resize","height","width","key_array","white_width","black_width","falling_blocks_delay"],"sourceRoot":"src","sources":["Piano.vue"],"sourcesContent":["<template>  <!-- Creating a template for the canvas aka the piano app -->\n  <div id=\"piano\" data-app>\n    <menu> </menu>\n    <canvas style=\"background: url('./canvas_black_background.jpg')\"> </canvas>\n    <keyboard> </keyboard>\n    <savesong> </savesong>\n    <loading> </loading>\n  </div>\n</template>\n  \n<script>\n/* Importing necessary files and functions*/\nimport menu from \"./components/piano/menu\"; /* Used for the features used by the user, such as toggling play/stop, toggling note annotations etc*/\nimport keyboard from \"./components/piano/keyboard\";  /* Drawing the keyboard */\nimport savesong from \"./components/screens/savesong\"\nimport loading from \"./components/screens/loading\"\nimport {mapState, mapActions} from 'vuex'; /* State management */ \nimport {canvasState} from \"@/store/consts/states.js\"; \nimport {resizeCanvas} from \"@/store/consts/actions.js\";\n\nexport default{\n  component: { menu, keyboard, savesong, loading },\n\n  created() {\n    window.addEventListener(\"resize\", this.resize);\n    this.$root.$on(\"resize_canvas_notes\", this.resize)\n  },\n\n  destroyed() {\n    window.removeEventListener(\"resize\", {})\n  },\n\n  methods: {\n    ...mapActions(canvasState, [resizeCanvas]),\n\n    resize() {\n      const keyboardDimensions = document.getElementById(\"piano-container\").getBoundingClientRect();\n      const menuDimensions = document.getElementById(\"piano-menu\").getBoundingClientRect();\n\n      const height = window.innerHeight - keyboardDimensions.height - menuDimensions.height;\n      const width = keyboardDimensions.width;\n\n      const white_notes = document.getElementByClassName(\"white-notes\");\n      const black_notes = document.getElementByClassName(\"black-notes\");\n\n      const white_width = white_notes[0].getBoundingClientRect().width;\n      const black_width = black_notes[0].getBoundingClientRect().width;\n\n      const key_array = Array.from(white_notes).concat(Array.from(black_notes));\n      const falling_blocks_delay = height * 10;\n\n      this.resizeCanvas({ height, width, key_array, white_width, black_width, falling_blocks_delay });\n    }\n  }\n}\n\n</script>\n\n<style>\n* {\n  -webkit-user-select: none; /* Safari */\n  -ms-user-select: none; /* IE 10+ and Edge */\n  user-select: none; /* Standard syntax */\n  box-sizing: border-box;\n  font-family: \"Lucida Console\", Courier, monospace;\n}\n\nbody, html {\n  height: 100%;\n  width: 100%;\n  margin: 0;\n  padding: 0;\n  overflow-y: hidden;\n}\n \n#piano {\n  height: 100%;\n  width: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  flex-direction: column;\n}\n\nselect:focus {\n  outline: 0;\n}\n \nbutton:focus {\n  outline: 0;\n}\n \ninput:focus {\n  outline: 0;\n} \n\n::-webkit-scrollbar {\n  width: 5px;\n}\n\n::-webkit-scrollbar-track {\n  background: #f1f1f1;\n}\n\n::-webkit-scrollbar-thumb {\n  background: #888;\n  border-radius: 2px;\n}\n\n::-webkit-scrollbar-thumb:hover {\n  background: #555;\n  border-radius: 2px;\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}